@*
    Copyright © 2022-Present The Open Human Task Specification Authors. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider AccessTokenProvider

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout)">
            <NotAuthorized>
                @if (!context.User.Identity?.IsAuthenticated == true)
                {
                    <RedirectToLogin />
                }
                else
                {
                    <p>You are not authorized to access this resource.</p>
                }
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(Layout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code
{

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        if (!this.NavigationManager.Uri.Contains("authentication/logged-out") && !this.NavigationManager.Uri.Contains("authentication/logout") && !(await this.AccessTokenProvider.RequestAccessToken()).TryGetToken(out _))
            this.NavigationManager.NavigateTo($"authentication/login?returnUrl={Uri.EscapeDataString(this.NavigationManager.Uri)}");
    }

}
