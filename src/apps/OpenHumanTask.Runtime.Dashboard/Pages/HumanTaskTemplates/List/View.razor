@* 
    Copyright © 2022-Present The Open Human Task Specification Authors. All rights reserved.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*@

@page "/tasks/templates"
@attribute [Authorize]
@inherits StatefulComponentBase<ListState>
@inject NavigationManager NavigationManager
@inject IBreadcrumbManager BreadcrumbManager

<PageTitle>Task templates</PageTitle>

<LeftMenu>
    <button class="btn btn-outline-dark">Create new template</button>
</LeftMenu>

<div class="row">
    <div class="col-6">
        <SearchBox PlaceHolder="Search templates..." OnSearch="OnSearchHumanTaskTemplates" OnClear="OnClearHumanTaskTemplateSearch" />
    </div>
</div>

@if(versionsPerTemplate != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Latest</th>
                <th>Versions</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var group in versionsPerTemplate)
            {
                <tr>
                    <td>@group.Key</td>
                    <td>@group.Value.First().Definition.Version</td>
                    <td>@group.Value.Count</td>
                    <td><button @onclick="() => OnViewHumanTaskTemplate(group.Value.First().Id)" @onclick:stopPropagation="true" class="btn btn-outline-dark"><small class="bi bi-info-circle"></small><span class="btn-label">Details</span></button></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <Spinner />
}

@code {
    private IDisposable? subscription;
    private Dictionary<string, List<HumanTaskTemplate>>? versionsPerTemplate;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        this.BreadcrumbManager.Use(Breadcrumbs.HumanTaskTemplates);
        this.subscription = this.Feature
           .Subscribe(state =>
           {
               this.versionsPerTemplate = state.Items?
                   .GroupBy(c => c.Definition.GetVersionlessIdentifier())
                   .ToDictionary(g => g.Key, g => g.OrderByDescending(c => SemVersion.Parse(c.Definition.Version, SemVersionStyles.Any)).ToList())!;
               this.StateHasChanged();
           });
        this.Dispatcher.Dispatch(new QueryHumanTaskTemplates());
    }

    void OnSearchHumanTaskTemplates(string term)
    {
        this.Dispatcher.Dispatch(new QueryHumanTaskTemplates(term));
    }

    void OnClearHumanTaskTemplateSearch()
    {
        this.Dispatcher.Dispatch(new QueryHumanTaskTemplates());
    }

    void OnViewHumanTaskTemplate(string id)
    {
        this.NavigationManager.NavigateTo($"/tasks/templates/{id}");
    }

}

