
/*
 * Copyright © 2022-Present The Open Human Task Specification Authors. All rights reserved.
 * <p>
 * Licensed under the Apache License, Version 2.0(the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* -----------------------------------------------------------------------
 * This file has been automatically generated by a tool
 * -----------------------------------------------------------------------
 */

namespace OpenHumanTask.Runtime.Integration.Models
{

	/// <summary>
	/// Represents a human-computer interaction
	/// </summary>
	[DataContract]
	[Queryable]
	public partial class HumanTask
		: AggregateRoot
	{

		/// <summary>
		/// The id of the HumanTask's HumanTaskTemplate
		/// </summary>
		[DataMember(Name = "definitionId", Order = 1)]
		[Description("The id of the HumanTask's HumanTaskTemplate")]
		public virtual string DefinitionId { get; set; }

		/// <summary>
		/// The HumanTask's key
		/// </summary>
		[DataMember(Name = "key", Order = 2)]
		[Description("The HumanTask's key")]
		public virtual string Key { get; set; }

		/// <summary>
		/// The HumanTask's status
		/// </summary>
		[DataMember(Name = "status", Order = 3)]
		[Description("The HumanTask's status")]
		public virtual HumanTaskStatus Status { get; set; }

		/// <summary>
		/// The people assigned to the HumanTask
		/// </summary>
		[DataMember(Name = "peopleAssignments", Order = 4)]
		[Description("The people assigned to the HumanTask")]
		public virtual PeopleAssignments PeopleAssignments { get; set; }

		/// <summary>
		/// The HumanTask's priority
		/// </summary>
		[DataMember(Name = "priority", Order = 5)]
		[Description("The HumanTask's priority")]
		public virtual int Priority { get; set; }

		/// <summary>
		/// A boolean indicating whether or not the HumanTask can be skipped
		/// </summary>
		[DataMember(Name = "skipable", Order = 6)]
		[Description("A boolean indicating whether or not the HumanTask can be skipped")]
		public virtual bool Skipable { get; set; }

		/// <summary>
		/// An IReadOnlyDictionary that contains the HumanTask's localized title language/value pairs
		/// </summary>
		[DataMember(Name = "title", Order = 7)]
		[Description("An IReadOnlyDictionary that contains the HumanTask's localized title language/value pairs")]
		public virtual Dictionary<string, string> Title { get; set; }

		/// <summary>
		/// An IReadOnlyDictionary that contains the HumanTask's localized subject language/value pairs
		/// </summary>
		[DataMember(Name = "subject", Order = 8)]
		[Description("An IReadOnlyDictionary that contains the HumanTask's localized subject language/value pairs")]
		public virtual Dictionary<string, string> Subject { get; set; }

		/// <summary>
		/// An IReadOnlyDictionary that contains the HumanTask's localized description language/value pairs
		/// </summary>
		[DataMember(Name = "description", Order = 9)]
		[Description("An IReadOnlyDictionary that contains the HumanTask's localized description language/value pairs")]
		public virtual Dictionary<string, string> Description { get; set; }

		/// <summary>
		/// The HumanTask's input
		/// </summary>
		[DataMember(Name = "input", Order = 10)]
		[Description("The HumanTask's input")]
		public virtual object Input { get; set; }

		/// <summary>
		/// The HumanTask's output
		/// </summary>
		[DataMember(Name = "output", Order = 11)]
		[Description("The HumanTask's output")]
		public virtual object Output { get; set; }

		/// <summary>
		/// The HumanTask's outcome
		/// </summary>
		[DataMember(Name = "outcome", Order = 12)]
		[Description("The HumanTask's outcome")]
		public virtual object Outcome { get; set; }

		/// <summary>
		/// The name of the completion behavior that allowed the HumanTask's completion, if any
		/// </summary>
		[DataMember(Name = "completionBehaviorName", Order = 13)]
		[Description("The name of the completion behavior that allowed the HumanTask's completion, if any")]
		public virtual string CompletionBehaviorName { get; set; }

		/// <summary>
		/// The date and time at which the HumanTask has started
		/// </summary>
		[DataMember(Name = "startedAt", Order = 14)]
		[Description("The date and time at which the HumanTask has started")]
		public virtual DateTimeOffset? StartedAt { get; set; }

		/// <summary>
		/// The date and time at which the HumanTask has been completed
		/// </summary>
		[DataMember(Name = "completedAt", Order = 15)]
		[Description("The date and time at which the HumanTask has been completed")]
		public virtual DateTimeOffset? CompletedAt { get; set; }

		/// <summary>
		/// An IReadOnlyCollection containing the HumanTask's Subtasks
		/// </summary>
		[DataMember(Name = "subtasks", Order = 16)]
		[Description("An IReadOnlyCollection containing the HumanTask's Subtasks")]
		public virtual List<Subtask> Subtasks { get; set; }

		/// <summary>
		/// An IReadOnlyCollection containing the HumanTask's Attachments
		/// </summary>
		[DataMember(Name = "attachments", Order = 17)]
		[Description("An IReadOnlyCollection containing the HumanTask's Attachments")]
		public virtual List<Attachment> Attachments { get; set; }

		/// <summary>
		/// An IReadOnlyCollection containing the HumanTask's Comments
		/// </summary>
		[DataMember(Name = "comments", Order = 18)]
		[Description("An IReadOnlyCollection containing the HumanTask's Comments")]
		public virtual List<Comment> Comments { get; set; }

		/// <summary>
		/// An IReadOnlyCollection containing the HumanTask's Faults
		/// </summary>
		[DataMember(Name = "faults", Order = 19)]
		[Description("An IReadOnlyCollection containing the HumanTask's Faults")]
		public virtual List<Fault> Faults { get; set; }

    }

}
